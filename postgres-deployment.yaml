apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: postgres
spec:
 serviceName: postgres
 replicas: 1
 selector:
   matchLabels:
     app: postgres
 template:
   metadata:
     labels:
       app: postgres
   spec:
     containers:
     - name: postgres
       image: postgres:15
       ports:
       - containerPort: 5432
       env:
       - name: POSTGRES_PASSWORD
         valueFrom:
           secretKeyRef:
             name: postgres-secrets
             key: POSTGRES_PASSWORD
       - name: POSTGRES_USER
         valueFrom:
           secretKeyRef:
             name: postgres-secrets
             key: POSTGRES_USER
       - name: POSTGRES_DB
         valueFrom:
           secretKeyRef:
             name: postgres-secrets
             key: POSTGRES_DB
       volumeMounts:
       - name: postgres-data
         mountPath: /var/lib/postgresql/data
       - name: init-script
         mountPath: /docker-entrypoint-initdb.d
     volumes:
     - name: init-script
       configMap:
         name: postgres-init-script
 volumeClaimTemplates:
 - metadata:
     name: postgres-data
   spec:
     accessModes: [ "ReadWriteOnce" ]
     resources:
       requests:
         storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: postgres-init-script
data:
 init.sql: |
  CREATE TABLE IF NOT EXISTS users (
      id SERIAL PRIMARY KEY,
      username VARCHAR(100) NOT NULL UNIQUE,
      password TEXT,
      mfa TEXT,
      gendate BIGINT,
      expired BOOLEAN DEFAULT FALSE
  );
  CREATE INDEX IF NOT EXISTS idx_username ON users(username);
---
apiVersion: v1
kind: Service
metadata:
 name: postgres
spec:
 selector:
   app: postgres
 ports:
 - port: 5432
   targetPort: 5432
 type: ClusterIP
